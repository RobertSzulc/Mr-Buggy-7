{
	"info": {
		"_postman_id": "a99ff41b-3287-4c9c-a5d4-1901f2332db7",
		"name": "MrBuggy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23146096"
	},
	"item": [
		{
			"name": "Pobranie wszystkich CR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Weryfikacja statusu odpowiedzi pobrania wszystkich CR - status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Czy odpowiedź zawiera Data\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Data\");\r",
							"});\r",
							"\r",
							"pm.test(\"Czy odpowiedź zawiera Provider\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Provider\");\r",
							"});\r",
							"\r",
							"pm.test(\"Czy odpowiedź zawiera CreateDate\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"CreateDate\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/x www form urlencoded",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "YWRtaW4=:YWRtaW4xMjMh",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{Host}}/cr",
					"protocol": "http",
					"host": [
						"{{Host}}"
					],
					"path": [
						"cr"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pobranie danego CR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Weryfikacja statusu odpowiedzi pobrania danego CR - status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Czy odpowiedź zawiera Data\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Data\");\r",
							"});\r",
							"\r",
							"pm.test(\"Czy odpowiedź zawiera Provider\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Provider\");\r",
							"});\r",
							"\r",
							"pm.test(\"Czy odpowiedź zawiera CreateDate\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"CreateDate\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/x www form urlencoded",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "YWRtaW4=:YWRtaW4xMjMh",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{Host}}/cr/2",
					"protocol": "http",
					"host": [
						"{{Host}}"
					],
					"path": [
						"cr",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pobranie historii zmian danego CR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Weryfikacja statusu odpowiedzi pobrania historii danego CR - status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Czy w odpowiedzi jest wartość Data\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Data\");\r",
							"});\r",
							"\r",
							"pm.test(\"Czy w odpowiedzi jest wartość User\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"User\");\r",
							"});\r",
							"\r",
							"pm.test(\"Czy w odpowiedzi jest wartość Date\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Date\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/x www form urlencoded",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "YWRtaW4=:YWRtaW4xMjMh",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{Host}}/cr/5/history",
					"protocol": "http",
					"host": [
						"{{Host}}"
					],
					"path": [
						"cr",
						"5",
						"history"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pobranie komentarzy danego CR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Weryfikacja statusu odpowiedzi pobrania danego CR - status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Czy w odpowiedzi jest wartość Data\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Data\");\r",
							"});\r",
							"\r",
							"pm.test(\"Czy w odpowiedzi jest wartość Id\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Czy w odpowiedzi jest wartość User\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"User\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/x www form urlencoded",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "YWRtaW4=:YWRtaW4xMjMh",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{Host}}/cr/2/comments",
					"protocol": "http",
					"host": [
						"{{Host}}"
					],
					"path": [
						"cr",
						"2",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Nadpisanie danego CR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Weryfikacja statusu odpowiedzi nadpisania CR - status 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Sprawdzenie czy odwiedź posiada poprawną nazwę (zgodną z zmienną - 'ZmianaNazwy')\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Data.Name).to.eql(pm.environment.get(\"ZmianaNazwy\"));\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/x www form urlencoded",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "UHJhY293bmlrMQ==:c2VzMTIzIQ==",
						"type": "text",
						"description": "Dane logowania użytownika typu Employee"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "number",
							"value": "77",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{ZmianaNazwy}}",
							"type": "text"
						},
						{
							"key": "description",
							"value": "testzpostoman44",
							"type": "text"
						},
						{
							"key": "reason",
							"value": "testzpostoman44",
							"type": "text"
						},
						{
							"key": "financial_sources",
							"value": "testzpostoman44",
							"type": "text"
						},
						{
							"key": "provider_id",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{Host}}/cr/21",
					"protocol": "http",
					"host": [
						"{{Host}}"
					],
					"path": [
						"cr",
						"21"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dodanie nowego CR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Weryfikacja statusu dodania nowego CR - status 200, 201, 202\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Czy nowy CR posiada staus 'Draft'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[\"Data\"].Status).to.eql(\"Draft\");\r",
							"});\r",
							"\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Czy wartość 'Id' to numer\", () => {\r",
							"pm.expect(jsonData.Data.Id).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.environment.set(\"CrIdToDelete\", pm.response.json().Data.Id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.environment.set(\"LosowyNumer\", pm.variables.replaceIn('{{$randomInt}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/x www form urlencoded",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "UHJhY293bmlrMQ==:c2VzMTIzIQ==",
						"type": "text",
						"description": "Dane logowania użytownika typu Employee"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "number",
							"value": "{{LosowyNumer}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "testzpostoman",
							"type": "text"
						},
						{
							"key": "description",
							"value": "testzpostoman",
							"type": "text"
						},
						{
							"key": "reason",
							"value": "testzpostoman",
							"type": "text"
						},
						{
							"key": "financial_sources",
							"value": "testzpostoman",
							"type": "text"
						},
						{
							"key": "provider_id",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{Host}}/cr",
					"protocol": "http",
					"host": [
						"{{Host}}"
					],
					"path": [
						"cr"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usunięcie danego CR",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Weryfikacja statusu odpowiedzi usunięcia CR - status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Sprawdzenie czy status usuniętego CR to 'Deleted' \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[\"Data\"].Status).to.eql(\"Deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/x www form urlencoded",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "YWRtaW4=:YWRtaW4xMjMh",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{Host}}/cr/{{CrIdToDelete}}",
					"protocol": "http",
					"host": [
						"{{Host}}"
					],
					"path": [
						"cr",
						"{{CrIdToDelete}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"pm.test(\"Odpowiedź zawiera nagłówek Content-Length\", () => {",
					"  pm.response.to.have.header(\"Content-Length\");",
					"});",
					"",
					"",
					"pm.test(\"Odpowiedź zawiera nagłówek Date\", () => {",
					"  pm.response.to.have.header(\"Date\");",
					"});",
					"",
					"",
					"pm.test(\"Odpwiedź zawiera nagłówek Server z wartością: Microsoft-HTTPAPI/2.0\", () => {",
					"  pm.expect(pm.response.headers.get('Server')).to.eql('Microsoft-HTTPAPI/2.0');",
					"});",
					"",
					"",
					"pm.test(\"Czas odpowiedzi jest mniejszy niż 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});",
					"",
					"",
					"const jsonData = pm.response.json();",
					"pm.test(\"Czy wartość 'Success' to boolean\", () => {",
					"pm.expect(jsonData.Success).to.be.a(\"boolean\");",
					"});",
					"",
					"pm.test(\"Czy w odpowiedzi dla 'Success' wartość wynosi true\", () => {",
					"  const expectedObject = {",
					"    \"Success\": true,",
					"    ",
					"  };",
					"  pm.expect(pm.response.json()).to.deep.include(expectedObject);",
					"});"
				]
			}
		}
	]
}